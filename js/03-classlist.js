const magicBtn = document.querySelector('.js-magic-btn');
/*
 * Интерфейс classList
 * - add(класс)
 * - remove(класс)
 * - toggle(класс)
 * - replace(старыйКласс, новыйКЛасс)
 * - contains(класс)
 */

// Как работать с классами?
const navEl = document.querySelector('.site-nav');
// console.log(navEl);

// У каждого элемента есть специальный интерфейс, который называется classList.Это свойство в котором 
// храниться объект у которого в __proto__ есть всякие полезные методы.При помощи которых можно сделать очень
// много.
  console.log(navEl.classList);

// Напоминание чем отличается класс от селектора:
// Класс и селектор - это два разных понятия в контексте веб-разработки и CSS.

// Класс в CSS представляет собой именованную группу элементов на веб - странице, которые имеют общие стили и
// могут быть выбраны и изменены с помощью CSS.Классы определяются с помощью атрибута class и обозначаются
// символом точки перед именем класса.Например:
// В css:

// .my-class {
//   color: red;
// }

// Здесь.my - class - это имя класса, к которому можно применить стили, заданные в фигурных скобках.Этот класс
// может быть применен к любому HTML - элементу на странице с помощью атрибута class.

// Селектор в CSS - это путь для нахождения и выбора HTML - элементов на странице, к которым будут применены
// определенные стили.Селекторы могут использовать различные параметры, такие как имя тега, классы, атрибуты
// и др. Например:

// h1 {
//   font-size: 24px;
// }

// Здесь h1 - это селектор, который выбирает все заголовки первого уровня на странице и применяет к ним стиль
// шрифта размером 24 пикселя.

// Таким образом, разница между классом и селектором заключается в том, что класс представляет собой
// именованную группу элементов, к которой могут быть применены стили, а селектор представляет собой путь для
// выбора элементов на странице, к которым будут применены определенные стили.


// add(класс): Добавляет класс (который вешается тегу в HTML) как строку (не селектор !!!)

navEl.classList.add('super-cool', 'one-more-class'); // с помощью add ожно добавить один или большее кол-во классов
// (название класса) на элемент. Т.е. через запятую передаем классы (как строки) элементу. Важно, добавляются
// не селекторы а классы. Кроме того это не работает с id, т.к. они сетятся через "setAttribute" !!!

// remove(класс): Удаляет класс как строку (не селектор!!!)
navEl.classList.remove('one-more-class');

// toggle(класс): это переключение.К примеру если на элементе есть класс то toggle его снимит, если класса нет
// то добавит. Разберем на примере:

magicBtn.addEventListener('click', () => {
  navEl.classList.toggle('one-more-class');
}); 

// Суть кода, при нажатии на кнопку toggle добавляет класс 'one-more-class' и при повторном нажатии удаляет его
// и так по кругу. Т.е. если в задачи есть необходимость что-то добавлять и удалять, то это решается toogle это
// как add и remove в одном флаконе.

// replace(старыйКласс, новыйКЛасс): Этот метод заменяет старый класс на новый.В параметрах указывается первым
// класс, который хотим заменить, вторым указываем новый класс.

// navEl.classList.replace('one-more-class', 'new-super-class');

// contains(класс): используется для того чтобы проверить, существует ли класс на элементе. Возвращает буль, т.е.
// true или false

// navEl.classList.contains('new-super-class');

// Разберем пример, в котором по селектору ищем элемент который содержит интересующий нас класс:
// Через шаблонную строку составляем селектор как в css. И далее добавляем на этот элемент ещё один класс.

// При решении подобного рода задач селектор может быть абсолютно произвольный и нам необходимо научиться
// использовать возможности css для наиболее простого поиска с помощью querySelector

// const currentPageUrl = '/contact';

// const linkEl = document.querySelector(
//   `[.site-nav__link[href="${currentPageUrl}"]`,  // это селектор для поиска нужного класса (вспоминаем как составлять из курса css)
// );

// console.log(linkEl);
// linkEl.classList.add('site-nav__link--current');

// // Как читать эту запись:
// const linkEl = document.querySelector(
//   `.site-nav__link[href="${currentPageUrl}"]`,
// );

// const linkEl = document.querySelector - пойди найди класс .site-nav__link, который может содержаться
// на элементе у которого есть href = с таким именем ${ currentPageUrl }. А это имя ${ currentPageUrl } = '/contact'
// как мы изначально определили в строке выше (стр.87).

// По сути мы делаем следующее: в файле css есть некий класс 'site-nav__link--current' у которого есть настройки
// цвета, мы хотим эти настройки применить для всх элементов, которые содержат атрибут href с именем "/contact" 
// у которого есть класс site-nav__link 